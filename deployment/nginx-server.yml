apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  default.conf: |-
    http {
        server {
            listen 80;
            server_name nginx;
            return 301 https://nginx$request_uri;
        }
        server {
            listen 443 ssl;
            root /var/lib/nginx/html;
            index index.html;

            server_name nginx;
            ssl_protocols TLSv1.2 TLSv1.3;
            ssl_certificate /etc/nginx/ssl/tls.crt;
            ssl_certificate_key /etc/nginx/ssl/tls.key;
            #ssl_client_certificate /etc/nginx/ssl/ca.crt;
            #ssl_verify_client optional;

            #location / {
            #    if ($ssl_client_verify != SUCCESS) {
            #      return 403;
            #    }
            #    try_files $uri $uri/ =404;
            #}
        }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  type: ClusterIP
  ports:
  - port: 80
    protocol: TCP
    name: http
  - port: 443
    protocol: TCP
    name: https
  - port: 81
    protocol: TCP
    name: tls-test
  selector:
    app: nginx
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-external
  labels:
    app: nginx
spec:
  type: NodePort
  ports:
  - port: 443
    targetPort: 443
    protocol: TCP
    name: https
  - port: 81
    targetPort: 81
    protocol: TCP
    name: tls-test
  selector:
    app: nginx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      hostname: nginx
      volumes:
      - name: secret-volume
        secret:
          secretName: tls-server-cert
      - name: configmap-volume
        configMap:
          name: nginx-config
      containers:
      - name: nginx
        image: localrepo/alpine-nginx
        imagePullPolicy: Never
        command: ["sh", "-c", "while true; do inotifywait -e delete_self /etc/nginx/ssl/tls.crt && echo \"$(date): cert changed\" && nginx -s reload; done & nginx -g 'daemon off;'"]
        ports:
        - containerPort: 443
        - containerPort: 80
        - containerPort: 81
        volumeMounts:
        - mountPath: /etc/nginx/ssl
          name: secret-volume
        - mountPath: /etc/nginx/conf.d
          name: configmap-volume